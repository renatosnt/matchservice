// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String                  @id @unique @db.Uuid
  username               String                  @unique
  realName               String
  email                  String                  @unique
  passwordHash           String
  type                   String
  createdAt              DateTime                @default(now())
  scheduledServices      Scheduling[]
  serviceProviderProfile ServiceProviderProfile?
}

model ServiceProviderProfile {
  id              String       @id @unique @db.Uuid
  user            User         @relation(fields: [userId], references: [id])
  userId          String       @unique @db.Uuid
  telephoneNumber String
  specialty       String
  averageRating   Float
  services        Service[]
  schedule        Scheduling[]
}

model Service {
  id               String                 @id @unique @db.Uuid
  title            String
  description      String
  viewCount        Int
  category         String
  locationState    String
  locationCity     String
  createdAt        DateTime               @default(now())
  creatorProfile   ServiceProviderProfile @relation(fields: [creatorProfileId], references: [id])
  schedule         Scheduling[]
  creatorProfileId String                 @db.Uuid
}

model Scheduling {
  id                       String                 @id @unique @db.Uuid
  service                  Service                @relation(fields: [serviceId], references: [id])
  serviceId                String                 @db.Uuid
  scheduledDate            DateTime
  isCompleted              Boolean
  isCanceled               Boolean
  customer                 User                   @relation(fields: [customerId], references: [id])
  customerId               String                 @db.Uuid
  rating                   Float
  serviceProviderProfile   ServiceProviderProfile @relation(fields: [serviceProviderProfileId], references: [id])
  serviceProviderProfileId String                 @db.Uuid
}
